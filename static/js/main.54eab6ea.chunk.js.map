{"version":3,"sources":["components/navigation/NavBar.js","components/footer/Footer.js","components/home/Intro.js","contentful.js","redux/actions/blogPost.js","redux/actions/types.js","redux/actions/singlePost.js","components/blogposts/BlogPostsPreview.js","components/projects/ProjectsPreview.js","redux/actions/projects.js","components/references/ReferencesPreview.js","pages/HomePage.js","components/blogposts/BlogPostsPage.js","pages/ArticlesPage.js","pages/AboutMe.js","pages/ContactPage.js","CodeBlock.js","pages/ArticleSingle.js","App.js","serviceWorker.js","redux/reducers/blogPost.js","redux/reducers/projects.js","redux/reducers/singlePost.js","redux/reducers/index.js","store.js","index.js"],"names":["NavBar","className","to","Footer","Intro","API_BASE_URL","API_TOKEN","getBlogPost","dispatch","type","axios","get","then","res","console","log","payload","catch","err","getSinglePost","slug","connect","state","blogPosts","blogPost","posts","singlePost","push","useHistory","useEffect","map","post","key","sys","id","onClick","e","preventDefault","routeToPost","fields","title","description","projects","getProject","project","href","source","target","rel","path","ReferencesPreview","HomePage","date","publishDate","format","ArticlesPage","BlogPostsPage","AboutMe","ContactPage","CodeBlock","this","props","language","value","style","PureComponent","defaultProps","useState","loading","setLoading","article","setArticle","useParams","client","contentful","space","accessToken","getEntries","entries","items","forEach","entry","body","renderers","code","App","exact","component","ArticleSingle","Boolean","window","location","hostname","match","initialState","error","combineReducers","action","data","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.54eab6ea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"nav-bar\">\r\n      <div className=\"nav-container\">\r\n        <div className=\"logo\">\r\n          <Link to=\"/\">\r\n            <h3>Daniel Kyman</h3>\r\n          </Link>\r\n        </div>\r\n        <div className=\"nav-links\">\r\n          <Link to=\"/about\">\r\n            <h3>About</h3>\r\n          </Link>\r\n          <Link to=\"/articles\">\r\n            <h3>Articles</h3>\r\n          </Link>\r\n          <Link to=\"/contact\">\r\n            <h3>Contact</h3>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* <h3>Toggle DarkMode</h3> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p className=\"footer-name\">Daniel Kyman 2020</p>\r\n      <p className=\"footer-links\">git link and other stuff ...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Intro = () => {\r\n  return (\r\n    <div className=\"intro\">\r\n      <h1>Welcome,</h1>\r\n      <div className=\"inner-home\">\r\n        <p>\r\n            I am a full stack web developer and software engineer specializing in\r\n          JavaScript, Node.js, SQL and much more. I developed this platform to\r\n          share my knowledge with the hopes of benefiting those starting a\r\n          journey in the world of web development. I hope you enjoy!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","export const API_BASE_URL = \"https://cdn.contentful.com\";\r\nexport const API_SPACE_ID = \"q2fivpqovvam\";\r\nexport const API_TOKEN = \"aq9YgRIXsgEKRLXG8bAC2mM5wChSJddYq2dSbvpS89k\";\r\n","import axios from \"axios\";\r\n\r\nimport { API_BASE_URL, API_SPACE_ID, API_TOKEN } from \"../../contentful\";\r\n\r\nimport {\r\n  GET_BLOGPOST_START,\r\n  GET_BLOGPOST_SUCCESS,\r\n  GET_BLOGPOST_ERROR\r\n} from \"./types\";\r\n\r\nexport const getBlogPost = () => dispatch => {\r\n  dispatch({ type: GET_BLOGPOST_START });\r\n  axios\r\n    .get(\r\n      `${API_BASE_URL}/spaces/${API_SPACE_ID}/entries?access_token=${API_TOKEN}&content_type=blogPost&order=-sys.createdAt`\r\n    )\r\n    .then(res => {\r\n      console.log(\"get blogPost result - \", res);\r\n      dispatch({ type: GET_BLOGPOST_SUCCESS, payload: res });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_BLOGPOST_ERROR,\r\n        payload: \"error fetching blogPost from api\"\r\n      });\r\n    });\r\n};\r\n","//blog posts\r\nexport const GET_BLOGPOST_START = \"GET_BLOGPOST_START\";\r\nexport const GET_BLOGPOST_SUCCESS = \"GET_BLOGPOST_SUCCESS\";\r\nexport const GET_BLOGPOST_ERROR = \"GET_BLOGPOST_ERROR\";\r\n\r\n//blog post single\r\nexport const GET_SINGLE_POST_START = \"GET_SINGLE_POST_START\";\r\nexport const GET_SINGLE_POST_SUCCESS = \"GET_SINGLE_POST_SUCCESS\";\r\nexport const GET_SINGLE_POST_ERROR = \"GET_SINGLE_POST_ERROR\";\r\n\r\n//github projects\r\nexport const GET_PROJECT_START = \"GET_PROJECT_START\";\r\nexport const GET_PROJECT_SUCCESS = \"GET_PROJECT_SUCCESS\";\r\nexport const GET_PROJECT_ERROR = \"GET_PROJECT_ERROR\";\r\n","import axios from \"axios\";\r\n\r\nimport { API_BASE_URL, API_SPACE_ID, API_TOKEN } from \"../../contentful\";\r\n\r\nimport {\r\n  GET_SINGLE_POST_START,\r\n  GET_SINGLE_POST_SUCCESS,\r\n  GET_SINGLE_POST_ERROR,\r\n} from \"./types\";\r\n\r\nexport const getSinglePost = (slug) => (dispatch) => {\r\n  dispatch({ type: GET_SINGLE_POST_START });\r\n  axios\r\n    .get(\r\n      // `${API_BASE_URL}/spaces/${API_SPACE_ID}/entries/${id}?access_token=${API_TOKEN}`\r\n      `${API_BASE_URL}/spaces/${API_SPACE_ID}/entries?access_token=${API_TOKEN}&content_type=blogPost&fields.slug=${slug}`\r\n    )\r\n    .then((res) => {\r\n      console.log(\"get single post result - \", res);\r\n      dispatch({ type: GET_SINGLE_POST_SUCCESS, payload: res });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_SINGLE_POST_ERROR,\r\n        payload: \"error fetching single post from api\",\r\n      });\r\n    });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { getBlogPost } from \"../../redux/actions/blogPost\";\r\nimport { getSinglePost } from \"../../redux/actions/singlePost\";\r\n\r\nconst BlogPostsPreview = ({ getBlogPost, blogPosts, getSinglePost, posts }) => {\r\n  const { push } = useHistory();\r\n  useEffect(() => {\r\n    getBlogPost();\r\n  }, [getBlogPost]);\r\n\r\n  const routeToPost = (e, slug, id) => {\r\n    e.preventDefault();\r\n    push(`/article/${slug}`);\r\n  };\r\n\r\n  // const dateFormat = (date) => {\r\n  //   return <Moment fromNow>{date}</Moment>;\r\n  // };\r\n\r\n  return (\r\n    <div className=\"blog-posts-preview\">\r\n      <div className=\"recent-articles-heading\">\r\n        <h1>Recent Articles</h1>\r\n        <Link to=\"/articles\">\r\n          <button className=\"muted-button\">View All</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"inner-home\">\r\n        {blogPosts.map((post) => {\r\n          return (\r\n            <div\r\n              key={post.sys.id}\r\n              className=\"article-preview\"\r\n              onClick={(e) => routeToPost(e, post.fields.slug, post.sys.id)}\r\n            >\r\n              <h2>{post.fields.title}</h2>\r\n              {/* <h4>{dateFormat(post.fields.publishDate)}</h4> */}\r\n              <p>- {post.fields.description}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    blogPosts: state.blogPost.blogPosts,\r\n    posts: state.singlePost,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getBlogPost, getSinglePost })(\r\n  BlogPostsPreview\r\n);\r\n","import React, { useEffect } from \"react\";\r\n\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { getProject } from \"../../redux/actions/projects\";\r\n\r\nconst ProjectsPreview = ({ getProject, projects }) => {\r\n  useEffect(() => {\r\n    getProject();\r\n  }, [getProject]);\r\n\r\n  return (\r\n    <div className=\"projects-preview\">\r\n      <h1>Recent Projects</h1>\r\n      {projects.map((project) => {\r\n        return (\r\n          <div key={project.sys.id} className=\"inner-home\">\r\n            <h3>\r\n              <a\r\n                href={project.fields.source}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n              >\r\n                {project.fields.title}\r\n              </a>\r\n            </h3>\r\n            <p>- {project.fields.description}</p>\r\n            <div className=\"repo-depo-links\">\r\n              <h3>\r\n                <a\r\n                  href={project.fields.source}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer noopener\"\r\n                >\r\n                  Repository\r\n                </a>\r\n              </h3>\r\n              <h3>\r\n                <a\r\n                  href={project.fields.path}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer noopener\"\r\n                >\r\n                  Deployment\r\n                </a>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.projects.projects,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProject })(ProjectsPreview);\r\n","import axios from \"axios\";\r\n\r\nimport { API_BASE_URL, API_SPACE_ID, API_TOKEN } from \"../../contentful\";\r\n\r\nimport {\r\n  GET_PROJECT_START,\r\n  GET_PROJECT_SUCCESS,\r\n  GET_PROJECT_ERROR\r\n} from \"./types\";\r\n\r\nexport const getProject = () => dispatch => {\r\n  dispatch({ type: GET_PROJECT_START });\r\n  axios\r\n    .get(\r\n      `${API_BASE_URL}/spaces/${API_SPACE_ID}/entries?access_token=${API_TOKEN}&content_type=project&order=-sys.createdAt`\r\n    )\r\n    .then(res => {\r\n      console.log(\"get project result - \", res);\r\n      dispatch({ type: GET_PROJECT_SUCCESS, payload: res });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_PROJECT_ERROR,\r\n        payload: \"error fetching project from api\"\r\n      });\r\n    });\r\n};\r\n","import React from \"react\";\r\n\r\nconst ReferencesPreview = () => {\r\n  return (\r\n    <div className=\"references-preview\">\r\n      <h1>Recent Inspiration</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReferencesPreview;\r\n","import React from \"react\";\r\n\r\n//components\r\nimport Intro from \"../components/home/Intro\";\r\nimport BlogPostsPreview from \"../components/blogposts/BlogPostsPreview\";\r\nimport ProjectsPreview from \"../components/projects/ProjectsPreview\";\r\nimport ReferencesPreview from \"../components/references/ReferencesPreview\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"home-page\">\r\n      <Intro />\r\n      <BlogPostsPreview />\r\n      <ProjectsPreview />\r\n      <ReferencesPreview />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\n\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { getBlogPost } from \"../../redux/actions/blogPost\";\r\nimport { getSinglePost } from \"../../redux/actions/singlePost\";\r\n\r\nconst BlogPostsPreview = ({ getBlogPost, blogPosts, getSinglePost, posts }) => {\r\n  const { push } = useHistory();\r\n  useEffect(() => {\r\n    getBlogPost();\r\n  }, [getBlogPost]);\r\n\r\n  const routeToPost = (e, slug, id) => {\r\n    e.preventDefault();\r\n    push(`/article/${slug}`);\r\n  };\r\n\r\n  const dateFormat = (date) => {\r\n    return <Moment format=\"D MMM YYYY\">{date}</Moment>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"blog-posts-preview\">\r\n      <div className=\"recent-articles-heading\">\r\n        <h1>Articles</h1>\r\n      </div>\r\n      <div className=\"inner-home\">\r\n        {blogPosts.map((post) => {\r\n          return (\r\n            <div\r\n              key={post.sys.id}\r\n              className=\"article-preview\"\r\n              onClick={(e) => routeToPost(e, post.fields.slug, post.sys.id)}\r\n            >\r\n              <h2>{post.fields.title}</h2>\r\n              <p className=\"articles-date\">\r\n                {dateFormat(post.fields.publishDate)}\r\n              </p>\r\n              <p>- {post.fields.description}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    blogPosts: state.blogPost.blogPosts,\r\n    posts: state.singlePost,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getBlogPost, getSinglePost })(\r\n  BlogPostsPreview\r\n);\r\n","import React from \"react\";\r\n\r\n//components\r\nimport BlogPostsPage from \"../components/blogposts/BlogPostsPage\";\r\n\r\nconst ArticlesPage = () => {\r\n  return (\r\n    <div className=\"articles-page\">\r\n      <BlogPostsPage />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticlesPage;\r\n","import React from \"react\";\r\n\r\nconst AboutMe = () => {\r\n  return (\r\n    <div className=\"about-page\">\r\n      <h1>About Me</h1>\r\n      <div className=\"inner-home\">\r\n        <p>\r\n          Ever since I built my first computer when I was 12 years old I have\r\n          been obsessed with hardware and software development. I began\r\n          developing web applications shortly after that, using the limited\r\n          self-study resources available online in the early 2000's. Throughout\r\n          that time I became extensively knowledgeable not only with the\r\n          development of web based applications but with graphic design using\r\n          Photoshop and Illustrator, 3d modeling and CAD using a variety of the\r\n          most popular design suits, electrical engineering and electromagnetism\r\n          concepts while designing and manufacturing my own printed circuit\r\n          boards, winding my own transformers, and embedded bare metal software\r\n          design including writing my own firmware in C , C++ and arduino. After\r\n          years of self study, I decided to further my education specifically in\r\n          regards to web development and enroll at Lambda, a 9 month full stack\r\n          coding boot camp. While studying at Lambda I came up with the idea to\r\n          develop my own online platform to share some of the knowledge I have\r\n          picked up over the years in the form of articles that I write, open\r\n          source projects that I have worked on, and articles written by others\r\n          that I have found useful.\r\n        </p>\r\n        <h2>Experience</h2>\r\n        <h3>Front End Development</h3>\r\n        <ul>\r\n          <li>Applied JavaScript</li>\r\n          <li>React</li>\r\n          <li>Single Page Applications</li>\r\n          <li>Form Management</li>\r\n          <li>Function and Class Components</li>\r\n          <li>CSS in JS</li>\r\n          <li>React Router</li>\r\n          <li>HTTP/AJAX</li>\r\n          <li>Redux</li>\r\n          <li>Async Redux w/ Middleware</li>\r\n          <li>User Interfaces</li>\r\n          <li>Responsive Design</li>\r\n          <li>Pre-Processors</li>\r\n        </ul>\r\n        <h3>Back End Development</h3>\r\n        <ul>\r\n          <li>RESTful Web APIs with Express and Node.js</li>\r\n          <li>Server-side Routing,Express Middleware</li>\r\n          <li>Relational Databases and SQL</li>\r\n          <li>Querying Data, Migrations and Seeding</li>\r\n          <li>Data Modeling</li>\r\n          <li>Authentication</li>\r\n          <li>Sessions and Cookies</li>\r\n          <li>JSON Web Tokens</li>\r\n          <li>Client Side Authentication</li>\r\n          <li>Automated Testing</li>\r\n          <li>Testing React Applications</li>\r\n          <li>Testing Web APIs</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React from \"react\";\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <div className=\"contact-page\">\r\n      <h1>contact page</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { duotoneDark as style } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\r\n\r\nclass CodeBlock extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null,\r\n  };\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <SyntaxHighlighter language={language} style={style}>\r\n        {value}\r\n      </SyntaxHighlighter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport CodeBlock from \"../CodeBlock\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { getSinglePost } from \"../redux/actions/singlePost\";\r\n\r\n//contentful\r\nimport { API_BASE_URL, API_SPACE_ID, API_TOKEN } from \"../contentful\";\r\nimport * as contentful from \"contentful\";\r\n\r\nconst ArticleSingle = ({ getSinglePost, post, blogPosts }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [article, setArticle] = useState();\r\n  const { slug } = useParams();\r\n\r\n  const client = contentful.createClient({\r\n    space: \"q2fivpqovvam\",\r\n    accessToken: \"aq9YgRIXsgEKRLXG8bAC2mM5wChSJddYq2dSbvpS89k\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // getSinglePost(slug);\r\n\r\n    // const article = blogPosts.filter((post) => {\r\n    //   return post.fields.slug === slug;\r\n    // });\r\n\r\n    client.getEntries().then((entries) => {\r\n      entries.items.forEach((entry) => {\r\n        if (entry.fields.slug === slug) {\r\n          console.log(\"test entry - \", entry);\r\n          setArticle(entry);\r\n          setLoading(false);\r\n        }\r\n      });\r\n    });\r\n\r\n    // axios\r\n    //   .get(\r\n    //     // `${API_BASE_URL}/spaces/${API_SPACE_ID}/entries/${id}?access_token=${API_TOKEN}`\r\n    //     `${API_BASE_URL}/spaces/${API_SPACE_ID}/entries?access_token=${API_TOKEN}&content_type=blogPost&fields.slug=${slug}`\r\n    //   )\r\n    //   .then((res) => {\r\n    //     console.log(res.data.items[0]);\r\n    //     setArticle(res.data.items[0]);\r\n    //     setLoading(false);\r\n    //   });\r\n  }, [slug]);\r\n\r\n  const dateFormat = (date) => {\r\n    // return <Moment fromNow>{date}</Moment>;\r\n    return <Moment format=\"D MMM YYYY\">{date}</Moment>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"article\">\r\n      {loading ? (\r\n        <span>loading</span>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"article-title\">{article.fields.title}</h1>\r\n          <div className=\"article-date-content-format\">\r\n            <p className=\"article-date\">\r\n              Published {dateFormat(article.fields.publishDate)}\r\n            </p>\r\n            {/* <img src={article.fields.heroImage.fields.file.url} alt=\"\" /> */}\r\n            <div className=\"article-content\">\r\n              <ReactMarkdown\r\n                source={article.fields.body}\r\n                renderers={{ code: CodeBlock }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    post: state.singlePost,\r\n    blogPosts: state.blogPost.blogPosts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getSinglePost })(ArticleSingle);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n//Components\r\nimport NavBar from \"./components/navigation/NavBar\";\r\nimport Footer from \"./components/footer/Footer\";\r\n\r\n//pages\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ArticlesPage from \"./pages/ArticlesPage\";\r\nimport AboutMe from \"./pages/AboutMe\";\r\nimport ContactPage from \"./pages/ContactPage\";\r\nimport ArticleSingle from \"./pages/ArticleSingle\";\r\n\r\n//Redux\r\n// import { connect } from \"react-redux\";\r\n// import { getBlogPost } from \"./redux/actions/blogPost\";\r\n\r\n// import \"./App.css\";\r\n// import \"./sass/test.scss\";\r\nimport \"./scss/main.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <NavBar />\r\n        <div className=\"global-format\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/articles\" component={ArticlesPage} />\r\n            <Route exact path=\"/about\" component={AboutMe} />\r\n            <Route exact path=\"/contact\" component={ContactPage} />\r\n            <Route exact path=\"/article/:slug\" component={ArticleSingle} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  GET_BLOGPOST_START,\r\n  GET_BLOGPOST_SUCCESS,\r\n  GET_BLOGPOST_ERROR\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  blogPosts: [],\r\n  loading: false,\r\n  error: \"\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_BLOGPOST_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: \"\"\r\n      };\r\n    case GET_BLOGPOST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        blogPosts: payload.data.items,\r\n        loading: false\r\n      };\r\n    case GET_BLOGPOST_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROJECT_START,\r\n  GET_PROJECT_SUCCESS,\r\n  GET_PROJECT_ERROR\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  loading: false,\r\n  error: \"\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROJECT_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: \"\"\r\n      };\r\n    case GET_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        projects: payload.data.items,\r\n        loading: false\r\n      };\r\n    case GET_PROJECT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_SINGLE_POST_START,\r\n  GET_SINGLE_POST_SUCCESS,\r\n  GET_SINGLE_POST_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  post: [],\r\n  slug: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_SINGLE_POST_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: \"\",\r\n      };\r\n    case GET_SINGLE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: payload.data.items[0],\r\n        slug: payload.data.items[0].fields.slug,\r\n        loading: false,\r\n      };\r\n    case GET_SINGLE_POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport blogPost from \"./blogPost\";\r\nimport projects from \"./projects\";\r\nimport singlePost from \"./singlePost\";\r\n\r\nexport default combineReducers({ blogPost, projects, singlePost });\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./redux/reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n// import axios from \"axios\";\r\n\r\n// import * as contentful from \"contentful\";\r\n\r\n// const client = contentful.createClient({\r\n//   space: \"q2fivpqovvam\",\r\n//   accessToken: \"aq9YgRIXsgEKRLXG8bAC2mM5wChSJddYq2dSbvpS89k\",\r\n// });\r\n\r\n// client.getEntries().then((entries) => {\r\n//   entries.items.forEach((entry) => {\r\n//     if (entry.fields) {\r\n//       console.log(entry.sys.contentType.sys.id, entry.fields);\r\n//     }\r\n//   });\r\n// });\r\n\r\n// const API_BASE_URL = \"https://cdn.contentful.com\";\r\n// const API_SPACE_ID = \"q2fivpqovvam\";\r\n// const API_TOKEN = \"aq9YgRIXsgEKRLXG8bAC2mM5wChSJddYq2dSbvpS89k\";\r\n\r\n// axios\r\n//   .get(\r\n//     `${API_BASE_URL}/spaces/${API_SPACE_ID}/entries?access_token=${API_TOKEN}&content_type=person`\r\n//   )\r\n//   .then(res => console.log(res))\r\n//   .catch(err => console.log(err));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}